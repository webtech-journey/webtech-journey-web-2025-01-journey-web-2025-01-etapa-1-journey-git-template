name: Setup Assignment Repository

on:
  push:
    branches:
      - main  # Runs when a new repository is initialized

permissions:
  contents: write  # Allows modifying repository contents

jobs:
  setup-repo:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1  # Fetch only the latest commit to check its author

    - name: Check If Commit is from GitHub Classroom Bot
      id: check-bot
      run: |
        AUTHOR_NAME=$(git log -1 --pretty=format:'%an')
        echo "Latest commit made by: $AUTHOR_NAME"

        if [[ "$AUTHOR_NAME" == "github-classroom[bot]" ]]; then
          echo "BOT_COMMIT=true" >> $GITHUB_ENV
        else
          echo "BOT_COMMIT=false" >> $GITHUB_ENV
        fi

    - name: Stop Execution If Not GitHub Classroom Bot
      if: env.BOT_COMMIT == 'false'
      run: |
        echo "❌ Not a commit from GitHub Classroom Bot. Skipping setup."
        exit 1  # Forces the workflow to stop execution

    - name: Configure Git with Actions Token
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}.git

    - name: Create Feature Branches and Introduce Conflicts
      run: |
        git checkout main
        git pull

        git checkout -b feature-a
        echo "Feature A - Line 1" > feature.txt
        echo "Feature A - Line 2" >> feature.txt
        git add feature.txt
        git commit -m "Add feature-a content"
        git push origin feature-a

        git checkout main
        git checkout -b feature-b
        echo "Feature B - Different content" > feature.txt
        git add feature.txt
        git commit -m "Add feature-b content"
        git push origin feature-b

        git checkout main
        git checkout -b feature-c
        echo "Debugging output" > debug.log
        git add debug.log
        git commit -m "Debugging output added"
        
        echo "Some typo fix" > typo.txt
        git add typo.txt
        git commit -m "Fix typo"
        
        echo "Another minor update" > change.txt
        git add change.txt
        git commit -m "Change applied"
        
        git push origin feature-c

    - name: Simulate Deleted File (config.txt)
      run: |
        git checkout main
        echo "Important Configurations" > config.txt
        git add config.txt
        git commit -m "Add config file"
        git rm config.txt
        git commit -m "Accidentally deleted config.txt"
        git push origin main

    - name: Add Unwanted Files (Secrets and Temp Files)
      run: |
        git checkout main
        echo "API_KEY=12345" > secrets.env
        mkdir temp_files
        echo "Temporary data" > temp_files/temp1.log
        echo "More temporary data" > temp_files/temp2.log
        git add secrets.env temp_files/*
        git commit -m "Oops, added sensitive and temporary files"
        git push origin main

    - name: Mark Setup as Complete
      run: |
        git checkout main
        git commit --allow-empty -m "Setup completed"
        git tag setup-complete
        git push origin setup-complete
